<?xml version="1.0"?>
<launch>
  <env name="ROSCONSOLE_CONFIG_FILE" value="$(find robot_tutorial)/rosconsole.conf"/>
  <include file="$(find robot_tutorial)/launch/move_base.launch"/>
    
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find robot_tutorial)/urdf/robot.xacro'"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find robot_tutorial)/launch/config.rviz" required="true"/>
  <!-- <node name="rviz" pkg="rviz" type="rviz" required="true"/> -->

  <node pkg="robot_tutorial" name="aruco" type="aruco.py" output="screen" />
  <node pkg="robot_tutorial" name="main" type="main.py" output="screen" />


  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="false"/>
  </node>
  
  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="z" default="0.5"/>

  <node name="my_robot" pkg="gazebo_ros" type="spawn_model" output="screen"
        args="-urdf -param robot_description -model bot_fast -x $(arg x) -y $(arg y) -z $(arg z)" /> 

  <arg name="debug" default="false"/>
  <arg name="gui" default="true"/> 
  <arg name="pause" default="false"/>   

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="world_name" value="$(find robot_tutorial)/world/new_world.world"/>
      <arg name="debug" value="$(arg debug)"/>
      <arg name="gui" value="$(arg gui)"/>
      <arg name="paused" value="$(arg pause)"/> 
      <arg name="use_sim_time" value="true"/>       
  </include>

  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
    <remap from="cloud_in" to="/velodyne_points"/>
    <rosparam>
        target_frame: velodyne # Leave disabled to output scan in pointcloud frame
        transform_tolerance: 0.01
        min_height: -0.45
        <!-- max_height: 2.0 -->
        <!-- angle_min: -M_PI -->
        <!-- angle_max: M_PI -->
        <!-- angle_increment: 0.0087 # M_PI/360.0 -->
        <!-- scan_time: 0.3333 -->
        <!-- range_min: 0.45 -->
        <!-- range_max: 130.0 -->
        <!-- use_inf: true -->
        <!-- inf_epsilon: 1.0 -->
        # Concurrency level, affects number of pointclouds queued for processing and number of threads used
        # 0 : Detect number of cores
        # 1 : Single threaded
        # 2->inf : Parallelism level
        concurrency_level: 0
    </rosparam>
  </node>

  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping">
    <rosparam>
      odom_frame: odom
      base_frame: base_link
      map_frame: map
      map_update_interval: 0.5 # Publish new map
      maxUrange: 30 # Should be just less than sensor range
      maxRange: 60 # Should be just greater than sensor range
      particles: 40 # Increased from 80
      
      # Update frequencies
      linearUpdate: 0.1 #0.3
      angularUpdate: 0.1 #0.5
      temporalUpdate: 2.0
      resampleThreshold: 0.5
      
      # Initial Map Size
      xmin: -200.0
      ymin: -200.0
      xmax: 200.0
      ymax: 200.0
      delta: 0.05
      
      # All default
      sigma: 0.05
      kernelSize: 1
      lstep: 0.05
      astep: 0.05
      iterations: 5
      lsigma: 0.075
      ogain: 3.0
      lskip: 0
      llsamplerange: 0.01
      llsamplestep: 0.01
      lasamplerange: 0.005
      lasamplestep: 0.005
    </rosparam>
  </node>

</launch>
